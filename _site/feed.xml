<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-09-01T00:57:57+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">QuantTech Finance</title><subtitle>Exploring the intersection of artificial intelligence, quantitative finance, and cutting-edge technology</subtitle><author><name>WanJo Chan</name><email>wanjochan@asu.edu</email></author><entry><title type="html">CubeX Analytics：基于 DuckDB 的多维 OLAP 引擎</title><link href="http://localhost:4000/posts/2025/08/30/cubex-analytics-duckdb-olap/" rel="alternate" type="text/html" title="CubeX Analytics：基于 DuckDB 的多维 OLAP 引擎" /><published>2025-08-30T00:00:00+00:00</published><updated>2025-08-30T00:00:00+00:00</updated><id>http://localhost:4000/posts/2025/08/30/cubex-analytics-duckdb-olap</id><content type="html" xml:base="http://localhost:4000/posts/2025/08/30/cubex-analytics-duckdb-olap/">&lt;p&gt;本文基于项目文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aixcorp/core/cubex.py&lt;/code&gt;，简述 CubeX Analytics 的设计与用法。它以 DuckDB 为内核，结合 FastAPI 暴露 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/query&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/olap&lt;/code&gt; 等接口，内置维度模型与缓存机制，适合在 AI 工作流中嵌入轻量分析能力。&lt;/p&gt;

&lt;h2 id=&quot;架构与数据模型&quot;&gt;架构与数据模型&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;核心类：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CubeXAnalytics&lt;/code&gt;（命令式 OLAP 引擎）与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QuantumDBService&lt;/code&gt;（HTTP 服务层）。&lt;/li&gt;
  &lt;li&gt;存储：DuckDB 文件（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data/cubex/cubex.duckdb&lt;/code&gt; 与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data/default.duckdb&lt;/code&gt;）。&lt;/li&gt;
  &lt;li&gt;维度表：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dim_time&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dim_agent&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dim_task&lt;/code&gt;；事实表：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fact_agent_performance&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;特性：LRU/TTL 缓存（查询/OLAP/模式/统计）、并发限制、性能指标记录与健康检查。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;能力速览&quot;&gt;能力速览&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;表与模式：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tables&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema &amp;lt;table&amp;gt;&lt;/code&gt;；初始化：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init&lt;/code&gt;（创建示例维度与事实数据）。&lt;/li&gt;
  &lt;li&gt;OLAP 操作：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dice&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rollup&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drilldown&lt;/code&gt;；支持按维度聚合与层级下钻。&lt;/li&gt;
  &lt;li&gt;API 端点：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST /query&lt;/code&gt; 执行 SQL；&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST /olap&lt;/code&gt; 执行切片/汇总/下钻；&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET /databases&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/health&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sample-queries&lt;/code&gt;；&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE /cache&lt;/code&gt; 清理缓存。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;示例&quot;&gt;示例&lt;/h2&gt;
&lt;p&gt;执行 SQL（限制返回行、可缓存）：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST http://localhost:9771/query &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Content-Type: application/json&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{
    &quot;sql&quot;: &quot;SELECT agent_type, AVG(execution_time_ms) avg_time FROM fact_agent_performance fp JOIN dim_agent da ON fp.agent_key = da.agent_key GROUP BY agent_type ORDER BY avg_time&quot;,
    &quot;limit&quot;: 20,
    &quot;cache&quot;: true
  }&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OLAP 汇总（按维度 rollup）：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST http://localhost:9771/olap &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Content-Type: application/json&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{
    &quot;operation&quot;: &quot;rollup&quot;,
    &quot;cube&quot;: &quot;fact_agent_performance&quot;,
    &quot;dimensions&quot;: [&quot;agent_type&quot;, &quot;task_category&quot;],
    &quot;measures&quot;: [&quot;execution_time_ms&quot;, &quot;tokens_processed&quot;]
  }&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;启动与配置&quot;&gt;启动与配置&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;环境变量：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PORT&lt;/code&gt;（默认 9771）、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CUBEX_DATA_DIR&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CUBEX_CACHE_DIR&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DUCKDB_MEMORY_LIMIT&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MAX_CONCURRENT_QUERIES&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;启动服务：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; aixcorp.core.cubex  &lt;span class=&quot;c&quot;&gt;# 或直接运行 cubex.py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若用于内嵌型分析（Agent/服务侧），建议先调用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init&lt;/code&gt; 生成示例数据，再通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/query&lt;/code&gt; 与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/olap&lt;/code&gt; 叠加你自身的业务维度与度量。&lt;/p&gt;</content><author><name>WanJo Chan</name></author><category term="OLAP" /><category term="DuckDB" /><category term="FastAPI" /><category term="数据分析" /><category term="多维分析" /><summary type="html">CubeX 是一个面向 AI 代理的多维分析引擎，基于 DuckDB 与 FastAPI，内置维度/事实模型、查询与 OLAP 操作、缓存与性能监控，适合低成本搭建内嵌式分析服务。</summary></entry></feed>